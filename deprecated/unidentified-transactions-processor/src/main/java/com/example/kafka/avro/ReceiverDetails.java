/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.kafka.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ReceiverDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 81487920075497677L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ReceiverDetails\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"birthdate\",\"type\":\"string\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"job\",\"type\":\"string\"},{\"name\":\"company\",\"type\":\"string\"},{\"name\":\"ssn\",\"type\":\"string\"},{\"name\":\"blood_group\",\"type\":\"string\"},{\"name\":\"website\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"bank_account\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ReceiverDetails> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ReceiverDetails> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ReceiverDetails> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ReceiverDetails> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ReceiverDetails> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ReceiverDetails to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ReceiverDetails from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ReceiverDetails instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ReceiverDetails fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence id;
  private java.lang.CharSequence name;
  private java.lang.CharSequence address;
  private java.lang.CharSequence email;
  private java.lang.CharSequence birthdate;
  private java.lang.CharSequence phone_number;
  private java.lang.CharSequence job;
  private java.lang.CharSequence company;
  private java.lang.CharSequence ssn;
  private java.lang.CharSequence blood_group;
  private java.lang.CharSequence website;
  private java.lang.CharSequence username;
  private java.lang.CharSequence bank_account;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ReceiverDetails() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param name The new value for name
   * @param address The new value for address
   * @param email The new value for email
   * @param birthdate The new value for birthdate
   * @param phone_number The new value for phone_number
   * @param job The new value for job
   * @param company The new value for company
   * @param ssn The new value for ssn
   * @param blood_group The new value for blood_group
   * @param website The new value for website
   * @param username The new value for username
   * @param bank_account The new value for bank_account
   */
  public ReceiverDetails(java.lang.CharSequence id, java.lang.CharSequence name, java.lang.CharSequence address, java.lang.CharSequence email, java.lang.CharSequence birthdate, java.lang.CharSequence phone_number, java.lang.CharSequence job, java.lang.CharSequence company, java.lang.CharSequence ssn, java.lang.CharSequence blood_group, java.lang.CharSequence website, java.lang.CharSequence username, java.lang.CharSequence bank_account) {
    this.id = id;
    this.name = name;
    this.address = address;
    this.email = email;
    this.birthdate = birthdate;
    this.phone_number = phone_number;
    this.job = job;
    this.company = company;
    this.ssn = ssn;
    this.blood_group = blood_group;
    this.website = website;
    this.username = username;
    this.bank_account = bank_account;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return address;
    case 3: return email;
    case 4: return birthdate;
    case 5: return phone_number;
    case 6: return job;
    case 7: return company;
    case 8: return ssn;
    case 9: return blood_group;
    case 10: return website;
    case 11: return username;
    case 12: return bank_account;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: address = (java.lang.CharSequence)value$; break;
    case 3: email = (java.lang.CharSequence)value$; break;
    case 4: birthdate = (java.lang.CharSequence)value$; break;
    case 5: phone_number = (java.lang.CharSequence)value$; break;
    case 6: job = (java.lang.CharSequence)value$; break;
    case 7: company = (java.lang.CharSequence)value$; break;
    case 8: ssn = (java.lang.CharSequence)value$; break;
    case 9: blood_group = (java.lang.CharSequence)value$; break;
    case 10: website = (java.lang.CharSequence)value$; break;
    case 11: username = (java.lang.CharSequence)value$; break;
    case 12: bank_account = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public java.lang.CharSequence getAddress() {
    return address;
  }


  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(java.lang.CharSequence value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }


  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'birthdate' field.
   * @return The value of the 'birthdate' field.
   */
  public java.lang.CharSequence getBirthdate() {
    return birthdate;
  }


  /**
   * Sets the value of the 'birthdate' field.
   * @param value the value to set.
   */
  public void setBirthdate(java.lang.CharSequence value) {
    this.birthdate = value;
  }

  /**
   * Gets the value of the 'phone_number' field.
   * @return The value of the 'phone_number' field.
   */
  public java.lang.CharSequence getPhoneNumber() {
    return phone_number;
  }


  /**
   * Sets the value of the 'phone_number' field.
   * @param value the value to set.
   */
  public void setPhoneNumber(java.lang.CharSequence value) {
    this.phone_number = value;
  }

  /**
   * Gets the value of the 'job' field.
   * @return The value of the 'job' field.
   */
  public java.lang.CharSequence getJob() {
    return job;
  }


  /**
   * Sets the value of the 'job' field.
   * @param value the value to set.
   */
  public void setJob(java.lang.CharSequence value) {
    this.job = value;
  }

  /**
   * Gets the value of the 'company' field.
   * @return The value of the 'company' field.
   */
  public java.lang.CharSequence getCompany() {
    return company;
  }


  /**
   * Sets the value of the 'company' field.
   * @param value the value to set.
   */
  public void setCompany(java.lang.CharSequence value) {
    this.company = value;
  }

  /**
   * Gets the value of the 'ssn' field.
   * @return The value of the 'ssn' field.
   */
  public java.lang.CharSequence getSsn() {
    return ssn;
  }


  /**
   * Sets the value of the 'ssn' field.
   * @param value the value to set.
   */
  public void setSsn(java.lang.CharSequence value) {
    this.ssn = value;
  }

  /**
   * Gets the value of the 'blood_group' field.
   * @return The value of the 'blood_group' field.
   */
  public java.lang.CharSequence getBloodGroup() {
    return blood_group;
  }


  /**
   * Sets the value of the 'blood_group' field.
   * @param value the value to set.
   */
  public void setBloodGroup(java.lang.CharSequence value) {
    this.blood_group = value;
  }

  /**
   * Gets the value of the 'website' field.
   * @return The value of the 'website' field.
   */
  public java.lang.CharSequence getWebsite() {
    return website;
  }


  /**
   * Sets the value of the 'website' field.
   * @param value the value to set.
   */
  public void setWebsite(java.lang.CharSequence value) {
    this.website = value;
  }

  /**
   * Gets the value of the 'username' field.
   * @return The value of the 'username' field.
   */
  public java.lang.CharSequence getUsername() {
    return username;
  }


  /**
   * Sets the value of the 'username' field.
   * @param value the value to set.
   */
  public void setUsername(java.lang.CharSequence value) {
    this.username = value;
  }

  /**
   * Gets the value of the 'bank_account' field.
   * @return The value of the 'bank_account' field.
   */
  public java.lang.CharSequence getBankAccount() {
    return bank_account;
  }


  /**
   * Sets the value of the 'bank_account' field.
   * @param value the value to set.
   */
  public void setBankAccount(java.lang.CharSequence value) {
    this.bank_account = value;
  }

  /**
   * Creates a new ReceiverDetails RecordBuilder.
   * @return A new ReceiverDetails RecordBuilder
   */
  public static ReceiverDetails.Builder newBuilder() {
    return new ReceiverDetails.Builder();
  }

  /**
   * Creates a new ReceiverDetails RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ReceiverDetails RecordBuilder
   */
  public static ReceiverDetails.Builder newBuilder(ReceiverDetails.Builder other) {
    if (other == null) {
      return new ReceiverDetails.Builder();
    } else {
      return new ReceiverDetails.Builder(other);
    }
  }

  /**
   * Creates a new ReceiverDetails RecordBuilder by copying an existing ReceiverDetails instance.
   * @param other The existing instance to copy.
   * @return A new ReceiverDetails RecordBuilder
   */
  public static ReceiverDetails.Builder newBuilder(ReceiverDetails other) {
    if (other == null) {
      return new ReceiverDetails.Builder();
    } else {
      return new ReceiverDetails.Builder(other);
    }
  }

  /**
   * RecordBuilder for ReceiverDetails instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ReceiverDetails>
    implements org.apache.avro.data.RecordBuilder<ReceiverDetails> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence name;
    private java.lang.CharSequence address;
    private java.lang.CharSequence email;
    private java.lang.CharSequence birthdate;
    private java.lang.CharSequence phone_number;
    private java.lang.CharSequence job;
    private java.lang.CharSequence company;
    private java.lang.CharSequence ssn;
    private java.lang.CharSequence blood_group;
    private java.lang.CharSequence website;
    private java.lang.CharSequence username;
    private java.lang.CharSequence bank_account;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ReceiverDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.address)) {
        this.address = data().deepCopy(fields()[2].schema(), other.address);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.email)) {
        this.email = data().deepCopy(fields()[3].schema(), other.email);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.birthdate)) {
        this.birthdate = data().deepCopy(fields()[4].schema(), other.birthdate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.phone_number)) {
        this.phone_number = data().deepCopy(fields()[5].schema(), other.phone_number);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.job)) {
        this.job = data().deepCopy(fields()[6].schema(), other.job);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.company)) {
        this.company = data().deepCopy(fields()[7].schema(), other.company);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.ssn)) {
        this.ssn = data().deepCopy(fields()[8].schema(), other.ssn);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.blood_group)) {
        this.blood_group = data().deepCopy(fields()[9].schema(), other.blood_group);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.website)) {
        this.website = data().deepCopy(fields()[10].schema(), other.website);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.username)) {
        this.username = data().deepCopy(fields()[11].schema(), other.username);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.bank_account)) {
        this.bank_account = data().deepCopy(fields()[12].schema(), other.bank_account);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing ReceiverDetails instance
     * @param other The existing instance to copy.
     */
    private Builder(ReceiverDetails other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.address)) {
        this.address = data().deepCopy(fields()[2].schema(), other.address);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.email)) {
        this.email = data().deepCopy(fields()[3].schema(), other.email);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.birthdate)) {
        this.birthdate = data().deepCopy(fields()[4].schema(), other.birthdate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.phone_number)) {
        this.phone_number = data().deepCopy(fields()[5].schema(), other.phone_number);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.job)) {
        this.job = data().deepCopy(fields()[6].schema(), other.job);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.company)) {
        this.company = data().deepCopy(fields()[7].schema(), other.company);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ssn)) {
        this.ssn = data().deepCopy(fields()[8].schema(), other.ssn);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.blood_group)) {
        this.blood_group = data().deepCopy(fields()[9].schema(), other.blood_group);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.website)) {
        this.website = data().deepCopy(fields()[10].schema(), other.website);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.username)) {
        this.username = data().deepCopy(fields()[11].schema(), other.username);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.bank_account)) {
        this.bank_account = data().deepCopy(fields()[12].schema(), other.bank_account);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public ReceiverDetails.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public ReceiverDetails.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public ReceiverDetails.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public ReceiverDetails.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public java.lang.CharSequence getAddress() {
      return address;
    }


    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public ReceiverDetails.Builder setAddress(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.address = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public ReceiverDetails.Builder clearAddress() {
      address = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmail() {
      return email;
    }


    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public ReceiverDetails.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.email = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public ReceiverDetails.Builder clearEmail() {
      email = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthdate' field.
      * @return The value.
      */
    public java.lang.CharSequence getBirthdate() {
      return birthdate;
    }


    /**
      * Sets the value of the 'birthdate' field.
      * @param value The value of 'birthdate'.
      * @return This builder.
      */
    public ReceiverDetails.Builder setBirthdate(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.birthdate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'birthdate' field has been set.
      * @return True if the 'birthdate' field has been set, false otherwise.
      */
    public boolean hasBirthdate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'birthdate' field.
      * @return This builder.
      */
    public ReceiverDetails.Builder clearBirthdate() {
      birthdate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'phone_number' field.
      * @return The value.
      */
    public java.lang.CharSequence getPhoneNumber() {
      return phone_number;
    }


    /**
      * Sets the value of the 'phone_number' field.
      * @param value The value of 'phone_number'.
      * @return This builder.
      */
    public ReceiverDetails.Builder setPhoneNumber(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.phone_number = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'phone_number' field has been set.
      * @return True if the 'phone_number' field has been set, false otherwise.
      */
    public boolean hasPhoneNumber() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'phone_number' field.
      * @return This builder.
      */
    public ReceiverDetails.Builder clearPhoneNumber() {
      phone_number = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'job' field.
      * @return The value.
      */
    public java.lang.CharSequence getJob() {
      return job;
    }


    /**
      * Sets the value of the 'job' field.
      * @param value The value of 'job'.
      * @return This builder.
      */
    public ReceiverDetails.Builder setJob(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.job = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'job' field has been set.
      * @return True if the 'job' field has been set, false otherwise.
      */
    public boolean hasJob() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'job' field.
      * @return This builder.
      */
    public ReceiverDetails.Builder clearJob() {
      job = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'company' field.
      * @return The value.
      */
    public java.lang.CharSequence getCompany() {
      return company;
    }


    /**
      * Sets the value of the 'company' field.
      * @param value The value of 'company'.
      * @return This builder.
      */
    public ReceiverDetails.Builder setCompany(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.company = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'company' field has been set.
      * @return True if the 'company' field has been set, false otherwise.
      */
    public boolean hasCompany() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'company' field.
      * @return This builder.
      */
    public ReceiverDetails.Builder clearCompany() {
      company = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'ssn' field.
      * @return The value.
      */
    public java.lang.CharSequence getSsn() {
      return ssn;
    }


    /**
      * Sets the value of the 'ssn' field.
      * @param value The value of 'ssn'.
      * @return This builder.
      */
    public ReceiverDetails.Builder setSsn(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.ssn = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'ssn' field has been set.
      * @return True if the 'ssn' field has been set, false otherwise.
      */
    public boolean hasSsn() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'ssn' field.
      * @return This builder.
      */
    public ReceiverDetails.Builder clearSsn() {
      ssn = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'blood_group' field.
      * @return The value.
      */
    public java.lang.CharSequence getBloodGroup() {
      return blood_group;
    }


    /**
      * Sets the value of the 'blood_group' field.
      * @param value The value of 'blood_group'.
      * @return This builder.
      */
    public ReceiverDetails.Builder setBloodGroup(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.blood_group = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'blood_group' field has been set.
      * @return True if the 'blood_group' field has been set, false otherwise.
      */
    public boolean hasBloodGroup() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'blood_group' field.
      * @return This builder.
      */
    public ReceiverDetails.Builder clearBloodGroup() {
      blood_group = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'website' field.
      * @return The value.
      */
    public java.lang.CharSequence getWebsite() {
      return website;
    }


    /**
      * Sets the value of the 'website' field.
      * @param value The value of 'website'.
      * @return This builder.
      */
    public ReceiverDetails.Builder setWebsite(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.website = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'website' field has been set.
      * @return True if the 'website' field has been set, false otherwise.
      */
    public boolean hasWebsite() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'website' field.
      * @return This builder.
      */
    public ReceiverDetails.Builder clearWebsite() {
      website = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'username' field.
      * @return The value.
      */
    public java.lang.CharSequence getUsername() {
      return username;
    }


    /**
      * Sets the value of the 'username' field.
      * @param value The value of 'username'.
      * @return This builder.
      */
    public ReceiverDetails.Builder setUsername(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.username = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'username' field has been set.
      * @return True if the 'username' field has been set, false otherwise.
      */
    public boolean hasUsername() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'username' field.
      * @return This builder.
      */
    public ReceiverDetails.Builder clearUsername() {
      username = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'bank_account' field.
      * @return The value.
      */
    public java.lang.CharSequence getBankAccount() {
      return bank_account;
    }


    /**
      * Sets the value of the 'bank_account' field.
      * @param value The value of 'bank_account'.
      * @return This builder.
      */
    public ReceiverDetails.Builder setBankAccount(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.bank_account = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'bank_account' field has been set.
      * @return True if the 'bank_account' field has been set, false otherwise.
      */
    public boolean hasBankAccount() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'bank_account' field.
      * @return This builder.
      */
    public ReceiverDetails.Builder clearBankAccount() {
      bank_account = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ReceiverDetails build() {
      try {
        ReceiverDetails record = new ReceiverDetails();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.address = fieldSetFlags()[2] ? this.address : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.email = fieldSetFlags()[3] ? this.email : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.birthdate = fieldSetFlags()[4] ? this.birthdate : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.phone_number = fieldSetFlags()[5] ? this.phone_number : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.job = fieldSetFlags()[6] ? this.job : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.company = fieldSetFlags()[7] ? this.company : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.ssn = fieldSetFlags()[8] ? this.ssn : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.blood_group = fieldSetFlags()[9] ? this.blood_group : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.website = fieldSetFlags()[10] ? this.website : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.username = fieldSetFlags()[11] ? this.username : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.bank_account = fieldSetFlags()[12] ? this.bank_account : (java.lang.CharSequence) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ReceiverDetails>
    WRITER$ = (org.apache.avro.io.DatumWriter<ReceiverDetails>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ReceiverDetails>
    READER$ = (org.apache.avro.io.DatumReader<ReceiverDetails>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.id);

    out.writeString(this.name);

    out.writeString(this.address);

    out.writeString(this.email);

    out.writeString(this.birthdate);

    out.writeString(this.phone_number);

    out.writeString(this.job);

    out.writeString(this.company);

    out.writeString(this.ssn);

    out.writeString(this.blood_group);

    out.writeString(this.website);

    out.writeString(this.username);

    out.writeString(this.bank_account);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);

      this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);

      this.address = in.readString(this.address instanceof Utf8 ? (Utf8)this.address : null);

      this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);

      this.birthdate = in.readString(this.birthdate instanceof Utf8 ? (Utf8)this.birthdate : null);

      this.phone_number = in.readString(this.phone_number instanceof Utf8 ? (Utf8)this.phone_number : null);

      this.job = in.readString(this.job instanceof Utf8 ? (Utf8)this.job : null);

      this.company = in.readString(this.company instanceof Utf8 ? (Utf8)this.company : null);

      this.ssn = in.readString(this.ssn instanceof Utf8 ? (Utf8)this.ssn : null);

      this.blood_group = in.readString(this.blood_group instanceof Utf8 ? (Utf8)this.blood_group : null);

      this.website = in.readString(this.website instanceof Utf8 ? (Utf8)this.website : null);

      this.username = in.readString(this.username instanceof Utf8 ? (Utf8)this.username : null);

      this.bank_account = in.readString(this.bank_account instanceof Utf8 ? (Utf8)this.bank_account : null);

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
          break;

        case 1:
          this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
          break;

        case 2:
          this.address = in.readString(this.address instanceof Utf8 ? (Utf8)this.address : null);
          break;

        case 3:
          this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);
          break;

        case 4:
          this.birthdate = in.readString(this.birthdate instanceof Utf8 ? (Utf8)this.birthdate : null);
          break;

        case 5:
          this.phone_number = in.readString(this.phone_number instanceof Utf8 ? (Utf8)this.phone_number : null);
          break;

        case 6:
          this.job = in.readString(this.job instanceof Utf8 ? (Utf8)this.job : null);
          break;

        case 7:
          this.company = in.readString(this.company instanceof Utf8 ? (Utf8)this.company : null);
          break;

        case 8:
          this.ssn = in.readString(this.ssn instanceof Utf8 ? (Utf8)this.ssn : null);
          break;

        case 9:
          this.blood_group = in.readString(this.blood_group instanceof Utf8 ? (Utf8)this.blood_group : null);
          break;

        case 10:
          this.website = in.readString(this.website instanceof Utf8 ? (Utf8)this.website : null);
          break;

        case 11:
          this.username = in.readString(this.username instanceof Utf8 ? (Utf8)this.username : null);
          break;

        case 12:
          this.bank_account = in.readString(this.bank_account instanceof Utf8 ? (Utf8)this.bank_account : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










